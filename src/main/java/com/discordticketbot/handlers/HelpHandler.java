package com.discordticketbot.handlers;

import com.discordticketbot.config.GuildConfig;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.events.interaction.command.SlashCommandInteractionEvent;

import java.awt.*;
import java.util.Map;

public class HelpHandler {
    private final Map<String, GuildConfig> guildConfigs;

    public HelpHandler(Map<String, GuildConfig> guildConfigs) {
        this.guildConfigs = guildConfigs;
    }

    public void handle(SlashCommandInteractionEvent event) {
        EmbedBuilder helpEmbed = new EmbedBuilder()
                .setTitle("üé´ Discord Ticket Bot - Help")
                .setDescription("A comprehensive ticket system with persistent database storage and advanced features.")
                .setColor(Color.BLUE);

        // Administrator Commands
        helpEmbed.addField("üëë Administrator Commands",
                "**`/setup`** - Configure the ticket system\n" +
                        "‚Ä¢ Set category, panel channel, transcript channel\n" +
                        "‚Ä¢ Configure support roles and error logging\n" +
                        "‚Ä¢ Initialize persistent ticket counter\n\n" +
                        "**`/panel`** - Send the ticket creation panel\n" +
                        "‚Ä¢ Sends interactive buttons to create tickets\n" +
                        "‚Ä¢ Must be used after `/setup`\n\n" +
                        "**`/config`** - View current configuration\n" +
                        "‚Ä¢ Shows all configured settings\n" +
                        "‚Ä¢ Displays database connection status\n\n" +
                        "**`/stats`** - View ticket statistics\n" +
                        "‚Ä¢ Shows total, open, closed tickets\n" +
                        "‚Ä¢ Breakdown by ticket types", false);

        // Staff Commands
        helpEmbed.addField("üõ°Ô∏è Staff Commands",
                "**`/closerequest [reason] [timeout]`** - Request ticket closure\n" +
                        "‚Ä¢ Ask ticket owner to confirm closure\n" +
                        "‚Ä¢ Optional auto-close timeout (1-168 hours)\n" +
                        "‚Ä¢ Requires user confirmation\n\n" +
                        "**`/autoclose exclude`** - Exclude ticket from auto-close\n" +
                        "‚Ä¢ Prevents timeout-based closure\n" +
                        "‚Ä¢ Useful for complex issues", false);

        // User Features
        helpEmbed.addField("üë• User Features",
                "**Ticket Creation** - Use buttons in panel channel\n" +
                        "‚Ä¢ üé´ Support - General help and questions\n" +
                        "‚Ä¢ ‚ö†Ô∏è Report - Report users, bugs, issues\n" +
                        "‚Ä¢ ‚öñÔ∏è Appeal - Appeal punishments\n\n" +
                        "**Ticket Management** - Use buttons in your ticket\n" +
                        "‚Ä¢ Close ticket when issue is resolved\n" +
                        "‚Ä¢ Only one ticket per user at a time", false);

        // System Features
        helpEmbed.addField("üíæ Database Features",
                "**Persistent Storage** - All data saved to PostgreSQL\n" +
                        "‚Ä¢ Guild configurations preserved across restarts\n" +
                        "‚Ä¢ Ticket counters continue from last number\n" +
                        "‚Ä¢ Complete ticket logs and statistics\n" +
                        "‚Ä¢ Close request tracking with timeouts", false);

        // Advanced Features
        helpEmbed.addField("‚ö° Advanced Features",
                "**Error Logging** - Optional error channel logging\n" +
                        "**Transcript Generation** - Save ticket conversations\n" +
                        "**Permission System** - Role-based access control\n" +
                        "**Auto-close System** - Configurable timeout closures\n" +
                        "**Cleanup Policies** - Automatic log/close-request cleanup\n" +
                        "**Assignments** - Assign tickets to specific staff\n" +
                        "**Close Requests** - User confirmation system", false);

        // Setup Instructions
        helpEmbed.addField("üöÄ Quick Setup",
                "1Ô∏è‚É£ Ensure bot has **Administrator** permission\n" +
                        "2Ô∏è‚É£ Use `/setup` to configure channels and roles\n" +
                        "3Ô∏è‚É£ Use `/panel` to send ticket creation buttons\n" +
                        "4Ô∏è‚É£ Users can now create tickets!\n\n" +
                        "**Important:** Bot requires Administrator permission for full functionality.", false);

        helpEmbed.setFooter("Discord Ticket Bot v1.2.0 ‚Ä¢ Database-backed ticket system",
                        event.getJDA().getSelfUser().getAvatarUrl())
                .setThumbnail(event.getJDA().getSelfUser().getAvatarUrl());

        event.replyEmbeds(helpEmbed.build()).setEphemeral(true).queue();
    }
}